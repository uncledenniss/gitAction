name: Mylab-Project/uncledenniss.propertly-poc
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    env:
      DOCKER_REGISTRY: docker.io
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.0
      
      - name: Purge local Maven repository
        run: mvn dependency:purge-local-repository
      
      - name: Setup Java 16
        uses: actions/setup-java@v4.0.0
        with:
          distribution: zulu
          java-version: '16'
      
      - name: Set up Maven settings.xml
        run: |
          mkdir -p ~/.m2
          echo "<settings>
                  <servers>
                    <server>
                      <id>Mylab-Project</id>
                      <username>${{ secrets.MAVEN_USERNAME }}</username>
                      <password>${{ secrets.MAVEN_PASSWORD }}</password>
                    </server>
                  </servers>
                </settings>" > ~/.m2/settings.xml
      
      - name: Build with Maven
        run: mvn --file pom.xml clean install package -X
        env:
          MAVEN_OPTS: "-Xmx3072m"
      
      - name: Check Maven dependency tree
        run: mvn dependency:tree | grep 'maven-compiler-plugin'
        working-directory: "${{ github.workspace }}"
      
      - name: Build Docker image
        run: docker build . --file "Dockerfile" -t uncledennis/gitactions:${{ github.run_number }}
      
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Push Docker image
        run: docker push uncledennis/gitactions:${{ github.run_number }}
      
      - name: Use GitHub script to manage files
        uses: actions/github-script@v7.0.0
        env:
          TARGET_FOLDER: "${{ runner.temp }}"
          CONTENTS: "**"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
        script: |-
          const fs = require('fs').promises
          const path = require('path')
          const io = require('@actions/io')
          const glob = require('@actions/glob')
          const target = path.resolve(process.env.TARGET_FOLDER)
          process.chdir(process.env.SOURCE_FOLDER || '.')
          if (process.env.CLEAN_TARGET_FOLDER === 'true') await io.rmRF(target)
          const flattenFolders = process.env.FLATTEN_FOLDERS === 'true'
          const options = {force: process.env.OVERWRITE === 'true'}
          const globber = await glob.create(process.env.CONTENTS || '**')
          for await (const file of globber.globGenerator()) {
            if ((await fs.lstat(file)).isDirectory()) continue
            const filename = flattenFolders ? path.basename(file) : file.substring(process.cwd().length)
            const dest = path.join(target, filename)
            await io.mkdirP(path.dirname(dest))
            await io.cp(file, dest, options)
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4.1.0
        with:
          name: drop
          path: "${{ runner.temp }}"
